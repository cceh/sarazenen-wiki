<?php
# This file was automatically generated by the MediaWiki 1.27.4
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "Repertorium Saracenorum";
$wgMetaNamespace = "Repertorium_Saracenorum";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "/wiki";
$wgScriptExtension = ".php";
$wgArticlePath = "/wiki/$1";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://saraceni.uni-koeln.de";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
#$wgLogo = "$wgResourceBasePath/resources/assets/wiki.png";
$wgLogo = "$wgResourceBasePath/resources/assets/Sarazenen_Logo_Redesign-Web-126px.png";
#$wgLogo = "$wgResourceBasePath/images/Sarazenen_Logo_Redesign-Web-120px.png";
#$wgLogo = "/afs/.rrz.uni-koeln.de/vol/www/projekt/sarazenen/http/docs/wiki/images/Sarazenen_Logo_Redesign-Web-120px.png";


## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "apache@saraceni.uni-koeln.de";
$wgPasswordSender = "apache@saraceni.uni-koeln.de";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "mysql.rrz.uni-koeln.de";
$wgDBname = "sarazenen-bonn";
$wgDBuser = "cceh";
$wgDBpassword = "";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = false;

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "de";

$wgSecretKey = "64e88d25325a794f2f64a5e8bb38620144834c2c160d734ef1ad5030c6f64153";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "511881aff1da48fe";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['edit'] = true;
$wgGroupPermissions['*']['read'] = false;
$wgGroupPermissions['*']['createpage'] = true;
$wgGroupPermissions['*']['generatepages'] = true;

$wgGroupPermissions['cceh-users']['edit'] = true;
$wgGroupPermissions['cceh-users']['read'] = true;
$wgGroupPermissions['cceh-users']['createpage'] = true;
#$wgGroupPermissions['*']['read'] = true;
$wgGroupPermissions['cceh-users']['generatepages'] = true;
$wgGroupPermissions['cceh-users']['nuke'] = true;

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
#wfLoadSkin( 'CologneBlue' );
#wfLoadSkin( 'Modern' );
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Vector' );


# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtensions('ExtensionName');
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'Cite' );
wfLoadExtension( 'CiteThisPage' );
wfLoadExtension( 'ConfirmEdit' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Interwiki' );
wfLoadExtension( 'LocalisationUpdate' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'Poem' );
wfLoadExtension( 'Renameuser' );
wfLoadExtension( 'SpamBlacklist' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TitleBlacklist' );
wfLoadExtension( 'WikiEditor' );
#wfLoadExtension( 'NukeDPL' );


# End of automatically generated settings.
# Add more configuration options below.


//for mw.v 1.25.x or above
// if (!wgCommandLineMode) {
   // wfLoadExtension ( 'Scribunto' );
   // wfLoadExtension( 'SemanticMediaWiki' );
   // wfLoadExtension( 'SemanticMaps' );
   // wfLoadExtension( 'SemanticForms' );
   // wfLoadExtension( 'NukeDPL' );
   // wfLoadExtension( 'DynamicPageList' );
   
// }

#wfLoadExtension("InteractiveTimeline");

#wfLoadExtension( 'PageForms' );

#wfLoadExtension('Scribunto');
$wgScribuntoDefaultEngine = 'luastandalone';

wfLoadExtension('SemanticMediaWik');
enableSemantics( 'http://saraceni.uni-koeln.de' );


wfLoadExtension('AdminLinks.php');

wfLoadExtension('CategorySortHeaders');

wfLoadExtension('ChapTimeline');

wfLoadExtension('ExternalData');

#require_once ("$IP/extensions/DynamicPageList/DynamicPageList.php");


wfLoadExtension('DataTransfer');

wfLoadExtension('PageSchemas');

wfLoadExtension('SemanticDrilldown');

wfLoadExtension('SemanticCompoundQueries');

wfLoadExtension('SemanticInternalObjects');

wfLoadExtension('HTMLTags');

wfLoadExtension('NativeSvgHandler');

wfLoadExtension('CSS');

wfLoadExtension('SVGEdit');

wfLoadExtension('TranslateSvg');

#include_once ("$IP/extensions/SemanticMediaWiki/SemanticMediaWiki.php");
#enableSemantics( 'example.org' );

#include_once("$IP/extensions/SemanticCompoundQueries/SemanticCompoundQueries.php");

#include_once("$IP/extensions/SemanticInternalObjects/SemanticInternalObjects.php");

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads  = true;
$wgGenerateThumbnailOnParse = true;
$wgShowExceptionDetails = true;
$wgJobRunRate = 1;
$wgRunJobsAsync = false;

$wgHTMLTagsAttributes['a'] = array( 'href', 'class' );

$wgHTMLTagsAttributes['svg'] = array( 'xmlns','xmlns:xlink' );
$wgHTMLTagsAttributes['text'] = array( 'x', 'y', 'class' );
$wgHTMLTagsAttributes['rect'] = array( 'x', 'y', 'width', 'height', 'style' );
#$wgHTMLTagsAttributes['line'] = array( 'id', 'x1', 'y1', 'x2', 'y2', 'stroke', 'stroke-width', 'stroke-linecap' );
$wgHTMLTagsAttributes['line'] = array( 'style', 'x1', 'y1', 'x2', 'y2', 'stroke', 'stroke-width', 'stroke-linecap' );

$wgNativeSvgHandlerEnableLinks = true; 
$wgSVGEditEditor = 'http://tools.wmflabs.org/svgedit/editor/svg-editor.html';

/* $wgFileExtensions[] = 'svg';
$wgStrictFileExtensions = true;
$wgAllowTitlesInSVG = true;
$wgSVGConverter = 'ImageMagick'; */

// ## use ImageMagick in mediawiki
// $wgUseImageResize = true;
// $wgUseImageMagick = true;
// ## Enable applicable one for windows
// # If you have installed ImageMagick in windows comment out below
// $wgImageMagickConvertCommand = "C:/Program Files/ImageMagick-6.9.10-Q16-HDRI/convert";
// # If you have portable version of ImageMagick. Show the path properly & comment out below line. In this case Portable ImageMagick was copied to mediawiki/extra folder. So path is shown this way.
// $wgImageMagickConvertCommand = "$IP/extra/convert";
// ## Enable this for Linux
// #$wgImageMagickConvertCommand = "/usr/bin/convert";
// $wgImageMagickConvertCommand = 'C:/Program Files/ImageMagick-6.9.10-Q16-HDRI/convert.exe';


// # For SVG image support
// $wgFileExtensions[] = 'svg';
// $wgAllowTitlesInSVG = true;
// $wgSVGConverter = 'ImageMagick';
// $wgSVGConverters = array(
    // 'ImageMagick' => '"C:/Program Files/ImageMagick-6.9.10-Q16-HDRI/convert" -background white -geometry $width $input $output',
  // );
  
  
  // // Create a local backend with a null lock manager
// $wgFileBackends[] = array(
        // 'name'        => 'local-backend',
        // 'class'       => 'FSFileBackend',
        // 'lockManager' => 'nullLockManager',
        // 'containerPaths' => array(
                // 'local-public'  => "{$wgUploadDirectory}",
                // 'local-thumb'   => "{$wgUploadDirectory}/thumb",
                // 'local-transcoded' => "{$wgUploadDirectory}/transcoded",
                // 'local-deleted' => $wgDeletedDirectory,
                // 'local-temp'    => "{$wgUploadDirectory}/temp",
        // ),
        // 'fileMode'    => 0644,
// );

// // Define a standard file repository that uses the local backend defined before
// $wgLocalFileRepo = array (
        // 'class'             => 'LocalRepo',
        // 'name'              => 'local',
        // 'directory'         => $wgUploadDirectory,
        // 'scriptDirUrl'      => $wgScriptPath,
        // 'scriptExtension'   => $wgScriptExtension,
        // 'url'               => $wgUploadBaseUrl ? $wgUploadBaseUrl . $wgUploadPath : $wgUploadPath,
        // 'hashLevels'        => $wgHashedUploadDirectory ? 2 : 0,
        // 'thumbScriptUrl'    => $wgThumbnailScriptPath,
        // 'transformVia404'   => !$wgGenerateThumbnailOnParse,
        // 'deletedDir'        => $wgDeletedDirectory,
        // 'deletedHashLevels' => $wgHashedUploadDirectory ? 3 : 0,
        // 'backend'           => 'local-backend',
// );

// $wgHashedUploadDirectory = false;

$wgUseTidy=false;
$wgRawHtml=true;


// TEST
wfLoadExtension('SemanticResultFormats');




